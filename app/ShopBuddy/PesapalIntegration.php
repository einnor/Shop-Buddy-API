<?php

/**
 * Created by PhpStorm.
 * User: Ronnie Nyaga
 */

namespace App\ShopBuddy;

use App\ShopBuddy\Cart\CartRepository;
include_once 'OAuth.php';

class PesapalIntegration
{
    protected $consumer_key;
    protected $consumer_secret;
    protected $consumer;
    protected $callback_url;
    protected $iframelink;
    protected $statusrequestAPI;

    public function __construct()
    {
        /**
         * Pesapal Consumer and Secret key
         */
        //TODO use env()
        $this->consumer_key = '2WVcrLQku/h1dgOU0oTUOgTjGYq+Zity';
        $this->consumer_secret = 'sJBZc7yFNon6a1YQfTaXL9IwKUg=';

        /**
         * Change this to https://www.pesapal.com/API/PostPesapalDirectOrderV4 when you are ready to go live
         */
        $this->iframelink = 'http://demo.pesapal.com/api/PostPesapalDirectOrderV4';

        //TODO Create this view
        //$callback_url = 'http://www.YOURDOMAIN.com/pesapal_callback.php';
        $this->callback_url = 'http://shopbuddy.co.ke/payments/callback';
        $this->consumer = new \OAuthConsumer($this->consumer_key, $this->consumer_secret);
    }

    public function getIframeSource(array $data, $cart, $user) {
        $token = $params = null;

        $post_xml = $this->setPesapalFormDetails($data, $cart, $user);

        $response = $this->constructOAuthRequestURLAndPostTransactionToPesapal($token, $params, $post_xml);

        return $response;
    }

    /**
     * Construct the OAuth Request URL & post transaction to pesapal
     * @param null $token
     * @param null $params
     * @param $post_xml
     * @return \OAuthRequest
     */
    public function constructOAuthRequestURLAndPostTransactionToPesapal($token = null, $params = null, $post_xml) {
        $signature_method = new \OAuthSignatureMethod_HMAC_SHA1();
        $iframe_src = \OAuthRequest::from_consumer_and_token($this->consumer, $token, 'GET', $this->iframelink, $params);
        $iframe_src->set_parameter('oauth_callback', $this->callback_url);
        $iframe_src->set_parameter('pesapal_request_data', $post_xml);
        $iframe_src->sign_request($signature_method, $this->consumer, $token);
        return $iframe_src;
    }

    /**
     * Set the form that will be sent as a request to Pesapal during payment
     * @param array $data
     * @param $cart
     * @param $user
     * @return string
     */
    public function setPesapalFormDetails(array $data, $cart, $user) {
        $amount         = (integer) $data['total_price'];
        $desc           = "ORDER DESCRIPTION";
        $type           = "MERCHANT"; // default value = MERCHANT
        $reference      = $cart->id; // unique order id of the transaction, generated by merchant
        $first_name     = head(explode(' ', $user->name)); // optional
        $last_name      = last(explode(' ', $user->name)); // optional
        $email          = $user->email;
        $phonenumber    = ''; // ONE of email or phonenumber is required

        $post_xml = '<?xml version="1.0" encoding="utf-8"?>';
        $post_xml .= '<PesapalDirectOrderInfo ';
        $post_xml .= 'xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ';
        $post_xml .= 'xmlns:xsd="http://www.w3.org/2001/XMLSchema" ';
        $post_xml .= 'Amount="'.$amount.'" ';
        $post_xml .= 'Description="'.$desc.'" ';
        $post_xml .= 'Type="'.$type.'" ';
        $post_xml .= 'Reference="'.$reference.'" ';
        $post_xml .= 'FirstName="'.$first_name.'" ';
        $post_xml .= 'LastName="'.$last_name.'" ';
        $post_xml .= 'Email="'.$email.'" ';
        $post_xml .= 'PhoneNumber="'.$phonenumber.'" ';
        $post_xml .= 'xmlns="http://www.pesapal.com" />';

        return htmlentities($post_xml);
    }

    /**
     * Get transaction status
     * @param $pesapal_merchant_reference
     * @param $pesapal_transaction_tracking_id
     * @param $token
     * @param $params
     * @return mixed
     */
    public function getTransactionStatus($pesapal_merchant_reference, $pesapal_transaction_tracking_id, $token, $params) {
        $signature_method = new OAuthSignatureMethod_HMAC_SHA1();
        $request_status = OAuthRequest::from_consumer_and_token($this->consumer, $token, 'GET', $this->statusrequestAPI, $params);
        $request_status -> set_parameter('pesapal_merchant_reference', $pesapal_merchant_reference);
        $request_status -> set_parameter('pesapal_transaction_tracking_id',$pesapal_transaction_tracking_id);
        $request_status -> sign_request($signature_method, $this->consumer, $token);
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $request_status);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_HEADER, 1);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
        if (defined('CURL_PROXY_REQUIRED')) {
            if (CURL_PROXY_REQUIRED == 'True') {
                $proxy_tunnel_flag = (defined('CURL_PROXY_TUNNEL_FLAG') && strtoupper(CURL_PROXY_TUNNEL_FLAG) == 'FALSE') ? false : true;
                curl_setopt ($ch, CURLOPT_HTTPPROXYTUNNEL, $proxy_tunnel_flag);
                curl_setopt ($ch, CURLOPT_PROXYTYPE, CURLPROXY_HTTP);
                curl_setopt ($ch, CURLOPT_PROXY, CURL_PROXY_SERVER_DETAILS);
            }
        }
        $response = curl_exec($ch);
        $header_size = curl_getinfo($ch, CURLINFO_HEADER_SIZE);
        $raw_header  = substr($response, 0, $header_size - 4);
        $headerArray = explode('\r\n\r\n', $raw_header);
        $header      = $headerArray[count($headerArray) - 1];

        $elements = preg_split('/=/',substr($response, $header_size));
        $status = $elements[1];
        curl_close ($ch);

        return $status;
    }

    /**
     * Pesapal IPN Listener
     */
    public function listen() {
        /**
         * Change to https://www.pesapal.com/api/QueryPaymentStatus' when you are ready to go live!
         */
        $this->statusrequestAPI = 'http://demo.pesapal.com/api/QueryPaymentStatus';

        /**
         * Fetch parameters sent to you by PesaPal IPN call. PesaPal will call the URL you entered above with the below query parameters;
         */
        $pesapal_notification_type        = $_GET['pesapal_notification_type'];
        $pesapal_transaction_tracking_id  = $_GET['pesapal_transaction_tracking_id'];
        $pesapal_merchant_reference       = $_GET['pesapal_merchant_reference'];

        if ($pesapal_notification_type == 'CHANGE' && $pesapal_transaction_tracking_id != '') {
            /**
             * Pesapal parameters
             */
            $token = $params = NULL;

            /**
             * Get transaction status
             */
            $status = $this->getTransactionStatus($pesapal_merchant_reference, $pesapal_transaction_tracking_id, $token, $params); // PENDING, COMPLETED or FAILED

            if($status == 'COMPLETED') {

                //Change status and save $pesapal_transaction_tracking_id
                $cartRepository = new CartRepository();
                $cartRepository->changePesapalTransactionStatus($status, $pesapal_transaction_tracking_id, $pesapal_merchant_reference);

                //TODO send email notification to customer informing them of successful transaction

                //TODO send response to pesapal informing them of receipt of successful payment
                $response  = 'pesapal_notification_type='.$pesapal_notification_type;
                $response .= '&pesapal_transaction_tracking_id='.$pesapal_transaction_tracking_id;
                $response .= '&pesapal_merchant_reference='.$pesapal_merchant_reference;
                ob_start();
                echo $response;
                ob_flush();
            }
            elseif($status == 'FAILED') {

                //Change status and save $pesapal_transaction_tracking_id
                $cartRepository = new CartRepository();
                $cartRepository->changePesapalTransactionStatus($status, $pesapal_transaction_tracking_id, $pesapal_merchant_reference);

                //TODO send email notification to customer informing them of successful transaction

                //TODO send response to pesapal informing them of receipt of successful
                $response  = 'pesapal_notification_type='.$pesapal_notification_type;
                $response .= '&pesapal_transaction_tracking_id='.$pesapal_transaction_tracking_id;
                $response .= '&pesapal_merchant_reference='.$pesapal_merchant_reference;
                ob_start();
                echo $response;
                ob_flush();
            }
            // If PENDING ... we do nothing ... Pesapal will keep sending us the IPN but
            // at least we know it's pending
            //exit;
        }
    }
}